"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/index";
exports.ids = ["pages/index"];
exports.modules = {

/***/ "./blockchain/tenderme.js":
/*!********************************!*\
  !*** ./blockchain/tenderme.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst ethers = __webpack_require__(/*! ethers */ \"ethers\");\nconst tendermeAbi = [\n    {\n        inputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"constructor\"\n    },\n    {\n        inputs: [],\n        name: \"applyForTender\",\n        outputs: [],\n        stateMutability: \"payable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"index\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"chooseContractor\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\"\n            }\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"contractors\",\n        outputs: [\n            {\n                internalType: \"address payable\",\n                name: \"\",\n                type: \"address\"\n            }, \n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"contracts\",\n        outputs: [\n            {\n                internalType: \"address payable\",\n                name: \"\",\n                type: \"address\"\n            }, \n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"getContractors\",\n        outputs: [\n            {\n                internalType: \"address payable[]\",\n                name: \"\",\n                type: \"address[]\"\n            }, \n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"getStatus\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"index\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"getTenderDetails\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\"\n            },\n            {\n                internalType: \"string\",\n                name: \"\",\n                type: \"string\"\n            },\n            {\n                internalType: \"string\",\n                name: \"\",\n                type: \"string\"\n            },\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\"\n            }, \n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"string\",\n                name: \"_tenderName\",\n                type: \"string\"\n            },\n            {\n                internalType: \"string\",\n                name: \"_tenderDetails\",\n                type: \"string\"\n            }, \n        ],\n        name: \"initTender\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"organisation\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"status\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"tenderCount\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"tenderID\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"tenders\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"id\",\n                type: \"uint256\"\n            },\n            {\n                internalType: \"string\",\n                name: \"tenderName\",\n                type: \"string\"\n            },\n            {\n                internalType: \"string\",\n                name: \"tenderDescription\",\n                type: \"string\"\n            },\n            {\n                internalType: \"address\",\n                name: \"userHash\",\n                type: \"address\"\n            }, \n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"winner\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    }, \n];\nconst tendermeContract = (web3)=>{\n    return new web3.eth.Contract(tendermeAbi, \"0x270691b145C6aec313547d5178C669255F5148F7\");\n// const provider = new ethers.providers.Web3Provider(ethereum);\n// const signer = provider.getSigner();\n// const transactionsContract = new ethers.Contract(\n//     \"0x976ac96cB6aEFAE51C7ed25FF2beAB86efD3F1D7\",\n//     tendermeAbi,\n//     signer\n// );\n// return transactionsContract;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (tendermeContract); // const provider = new ethers.providers.Web3Provider(ethereum);\n // const signer = provider.getSigner();\n // const transactionsContract = new ethers.Contract(contractAddress, contractABI, signer);\n // return transactionsContract;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./blockchain/tenderme.js\n");

/***/ }),

/***/ "./pages/index.js":
/*!************************!*\
  !*** ./pages/index.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Home)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/head */ \"next/head\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var web3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3 */ \"web3\");\n/* harmony import */ var web3__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(web3__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _blockchain_tenderme__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../blockchain/tenderme */ \"./blockchain/tenderme.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ethers */ \"ethers\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(ethers__WEBPACK_IMPORTED_MODULE_5__);\n\n\n\n\n\n\nfunction Home() {\n    const { 0: currentAccount , 1: setCurrentAccount  } = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const { 0: web3Object , 1: setWeb3Object  } = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const { 0: abiContract , 1: setAbiContract  } = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const { 0: tenderStatus1 , 1: setTenderStatus  } = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const { 0: contractSigner , 1: setContractSigner  } = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const { 0: tenderID1 , 1: setTenderID  } = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"\");\n    const { 0: contractCreator , 1: setContractCreator  } = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const { 0: contractors1 , 1: setContractors  } = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)([]);\n    const { 0: pastContractors , 1: setPastContractors  } = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)([]);\n    // Check if metamask wallet is connected\n    const checkForMetamaskWallet = async ()=>{\n        if ( false || typeof window.ethereum !== \"undefined\") {\n            try {\n                if (!window.ethereum) {\n                    return alert(\"Please install metamask.\");\n                }\n                // Get the accounts if metamask is connected\n                const accounts = await window.ethereum.request({\n                    method: \"eth_accounts\"\n                });\n                // If there are accounts, set the current account\n                if (accounts.length) {\n                    console.log(\"Accounts: \", accounts);\n                    setCurrentAccount(accounts[0]);\n                } else {\n                    console.log(\"No accounts found.\");\n                }\n            } catch (error) {\n                console.log(error);\n            }\n        } else {\n            console.log(\"No metamask found.\");\n        }\n    };\n    // Connect to metamask wallet\n    const connectToMetamaskWallet = async ()=>{\n        try {\n            // If metamask is not connected\n            if (!window.ethereum) {\n                return alert(\"Please install MetaMask.\");\n            }\n            await ethereum.request({\n                method: \"eth_requestAccounts\"\n            });\n            const web3 = new (web3__WEBPACK_IMPORTED_MODULE_3___default())(window.ethereum);\n            /* set web3 instance in React state */ setWeb3Object(web3);\n            const accounts = await web3.eth.getAccounts();\n            setCurrentAccount(accounts[0]);\n            // Set the ethereum contract\n            const tendermeAbiContract = await (0,_blockchain_tenderme__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(web3);\n            setAbiContract(tendermeAbiContract);\n        } catch (error) {\n            console.log(error);\n            throw new Error(\"No ethereum object\");\n        }\n    // const accounts = await web3.eth.getAccounts();\n    // return accounts[0];\n    };\n    // Get the details of past contractors\n    const getPastContractors = async (tenderID)=>{\n        setPastContractors([]);\n        for(let i = parseInt(tenderID); i > 0; i--){\n            const currentContractor = await abiContract.methods.contracts(i).call();\n            const tenderObject = {};\n            tenderObject.tenderID = i;\n            tenderObject.address = currentContractor;\n            setPastContractors((contracts)=>[\n                    ...contracts,\n                    tenderObject\n                ]\n            );\n        }\n    // const pastContractors = await abiContract.methods.contracts().call();\n    // setPastContractors(pastContractors);\n    };\n    // Get the Tender ID\n    const getTenderID = async ()=>{\n        const tenderID = await abiContract.methods.tenderID().call();\n        setTenderID(tenderID);\n        await getPastContractors(tenderID);\n    };\n    // Get the current tender status\n    const getTenderStatus = async ()=>{\n        const tenderStatus = await abiContract.methods.getStatus().call();\n        console.log(\"TENDER STATUS: \", tenderStatus);\n        setTenderStatus(parseInt(tenderStatus));\n    };\n    // Method to apply for the tender\n    const applyForTender = async ()=>{\n        const tenderStatus = await abiContract.methods.getStatus().call();\n        // const tenderStatus = await abiContract.getStatus();\n        // const parsedStatus = parseInt(tenderStatus._hex, 16);\n        if (parseInt(tenderStatus) === 0) {\n            // await abiContract.initTender();\n            // await getTenderStatus();\n            const parsedAmount = ethers__WEBPACK_IMPORTED_MODULE_5__.ethers.utils.parseEther(\"0.01\");\n            // await ethereum.request({\n            //     method: \"eth_sendTransaction\",\n            //     params: [\n            //         {\n            //             from: currentAccount,\n            //             to: \"0xBc35F66f0B66035116670F8556E3c792264Fb1e2\",\n            //             gas: \"0x5208\",\n            //             value: parsedAmount._hex,\n            //         },\n            //     ],\n            // });\n            // const transactionHash = await abiContract.applyForTender();\n            await abiContract.methods.applyForTender().send({\n                from: currentAccount,\n                value: parsedAmount,\n                gas: 300000,\n                gasPrice: null\n            });\n        } else {\n            alert(\"Tender is closed now.\");\n        }\n    };\n    // Choose the tender winner\n    const chooseContractorMethod = async (contractorAddress)=>{\n        const tenderStatus = await abiContract.methods.getStatus().call();\n        if (parseInt(tenderStatus) === 0) {\n            await abiContract.methods.chooseContractor(contractorAddress).send({\n                from: currentAccount,\n                gas: 300000,\n                gasPrice: null\n            });\n        } else {\n            alert(\"Tender is closed now.\");\n        }\n    };\n    // Get the contract signer\n    const getContractSigner = async ()=>{\n        const provider = new ethers__WEBPACK_IMPORTED_MODULE_5__.ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        setContractSigner(signer);\n    };\n    // Get all the contractor pool\n    const getContractors = async ()=>{\n        const contractors = await abiContract.methods.getContractors().call();\n        // const contractors = await abiContract.getContractors();\n        setContractors(contractors);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (abiContract) {\n            getTenderStatus();\n            getContractSigner();\n            getContractors();\n            getTenderID();\n        }\n    }, [\n        abiContract\n    ]);\n    console.log(\"Current Acount: \", currentAccount);\n    console.log(\"Current contract\", abiContract);\n    console.log(\"Current status\", tenderStatus1);\n    console.log(\"Contract Signer\", contractSigner);\n    console.log(\"Contractors\", contractors1);\n    console.log(\"Past Contractors\", pastContractors);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"w-full h-full m-auto\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"container m-auto w-3/4\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_1___default()), {\n                    className: \"flex justify-center items-center m-auto text-center\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"title\", {\n                            children: \"TenderMe\"\n                        }, void 0, false, {\n                            fileName: \"/Users/neeraj/Desktop/blockchain/tenderme/dev/pages/index.js\",\n                            lineNumber: 188,\n                            columnNumber: 21\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                            rel: \"icon\",\n                            href: \"/favicon.ico\"\n                        }, void 0, false, {\n                            fileName: \"/Users/neeraj/Desktop/blockchain/tenderme/dev/pages/index.js\",\n                            lineNumber: 189,\n                            columnNumber: 21\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/neeraj/Desktop/blockchain/tenderme/dev/pages/index.js\",\n                    lineNumber: 187,\n                    columnNumber: 17\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                            className: \"title text-cyan-600 font-sans font-semibold\",\n                            children: \"TenderMe\"\n                        }, void 0, false, {\n                            fileName: \"/Users/neeraj/Desktop/blockchain/tenderme/dev/pages/index.js\",\n                            lineNumber: 193,\n                            columnNumber: 21\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: ()=>{\n                                connectToMetamaskWallet();\n                            },\n                            children: [\n                                \"Click me\",\n                                \" \"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/neeraj/Desktop/blockchain/tenderme/dev/pages/index.js\",\n                            lineNumber: 196,\n                            columnNumber: 21\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: ()=>{\n                                applyForTender();\n                            },\n                            children: \"Apply\"\n                        }, void 0, false, {\n                            fileName: \"/Users/neeraj/Desktop/blockchain/tenderme/dev/pages/index.js\",\n                            lineNumber: 203,\n                            columnNumber: 21\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                            fileName: \"/Users/neeraj/Desktop/blockchain/tenderme/dev/pages/index.js\",\n                            lineNumber: 210,\n                            columnNumber: 21\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: ()=>{\n                                chooseContractorMethod(1);\n                            },\n                            children: \"Choose winner\"\n                        }, void 0, false, {\n                            fileName: \"/Users/neeraj/Desktop/blockchain/tenderme/dev/pages/index.js\",\n                            lineNumber: 211,\n                            columnNumber: 21\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/neeraj/Desktop/blockchain/tenderme/dev/pages/index.js\",\n                    lineNumber: 192,\n                    columnNumber: 17\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/neeraj/Desktop/blockchain/tenderme/dev/pages/index.js\",\n            lineNumber: 186,\n            columnNumber: 13\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/neeraj/Desktop/blockchain/tenderme/dev/pages/index.js\",\n        lineNumber: 185,\n        columnNumber: 9\n    }, this);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.js\n");

/***/ }),

/***/ "ethers":
/*!*************************!*\
  !*** external "ethers" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("ethers");

/***/ }),

/***/ "next/head":
/*!****************************!*\
  !*** external "next/head" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("next/head");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

module.exports = require("react");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("react/jsx-dev-runtime");

/***/ }),

/***/ "web3":
/*!***********************!*\
  !*** external "web3" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("web3");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/index.js"));
module.exports = __webpack_exports__;

})();